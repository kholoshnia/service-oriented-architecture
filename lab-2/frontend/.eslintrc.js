module.exports = {
  root: true,
  extends: [
    'prettier',
    'eslint:recommended',
    'plugin:node/recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:import/errors',
    'plugin:import/typescript',
    'plugin:react/recommended',
    'plugin:react-hooks/recommended',
  ],
  plugins: ['prettier', 'node', 'import', 'unused-imports', 'jsx-a11y'],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
  },
  settings: {
    react: {
      version: 'detect',
    },
    'import/resolver': {
      node: {
        extensions: ['.ts', '.tsx', '.js', '.jsx'],
        moduleDirectory: ['node_modules', 'src'],
      },
    },
    'import/extensions': ['.ts', '.tsx', '.js', '.jsx'],
    'import/ignore': ['node_modules'],
  },
  ignorePatterns: [
    'build',
    'node_modules',
    'config',
    'public',
    'scripts',
    'serviceWorker.js',
  ],
  rules: {
    'prettier/prettier': 'error',
    'block-scoped-var': 'error',
    'eol-last': 'error',
    eqeqeq: 'error',
    'no-dupe-class-members': 'off',
    'no-restricted-properties': [
      'error',
      { object: 'describe', property: 'only' },
      {
        object: 'it',
        property: 'only',
      },
    ],
    'no-trailing-spaces': 'error',
    'no-var': 'error',
    'object-curly-spacing': ['error', 'always'],
    'prefer-arrow-callback': 'warn',
    'prefer-const': 'error',
    quotes: ['warn', 'single', { avoidEscape: true }],
    'require-atomic-updates': 'off',
    'spaced-comment': ['error', 'always'],
    'node/no-missing-import': 'off',
    'node/no-empty-function': 'off',
    'node/no-unpublished-require': 'off',
    'node/no-unpublished-import': 'off',
    'node/no-unsupported-features/es-syntax': 'off',
    'node/no-missing-require': 'off',
    'node/shebang': 'off',
    '@typescript-eslint/no-non-null-assertion': 'off',
    '@typescript-eslint/no-use-before-define': 'off',
    '@typescript-eslint/no-warning-comments': 'off',
    '@typescript-eslint/no-empty-function': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-var-requires': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/ban-types': 'off',
    '@typescript-eslint/camelcase': 'off',
    'import/no-useless-path-segments': ['error', { noUselessIndex: true }],
    'import/no-duplicates': ['error'],
    'import/order': [
      'error',
      {
        'newlines-between': 'always',
        alphabetize: {
          order: 'asc',
          caseInsensitive: true,
        },
        groups: [
          'builtin',
          'external',
          'internal',
          ['parent', 'sibling', 'index'],
        ],
        pathGroups: [
          { pattern: 'react', group: 'builtin', position: 'before' },
        ],
        pathGroupsExcludedImportTypes: ['react'],
      },
    ],
    'react/display-name': 'off',
    'unused-imports/no-unused-imports': 'error',
    'react/prop-types': 'off',
    'import/no-unresolved': 'off',
    'react-hooks/exhaustive-deps': 'off',
    'react/react-in-jsx-scope': 'off',

    // TODO fix while refactoring and remove
    // TODO remove all unnecessary eslint-disable-next-line in code
    'react/jsx-no-target-blank': 'warn',
    'node/no-extraneous-require': 'warn',
  },
};
